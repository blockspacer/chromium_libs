# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := jni_sample_java
### Rules for action "javac_jni_sample_java":
quiet_cmd_base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_javac_jni_sample_java = ACTION Compiling jni_sample_java java sources $@
cmd_base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_javac_jni_sample_java = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/base/android/jni_generator; mkdir -p $(obj)/gen/jni_sample_java; python ../../../build/android/gyp/javac.py "--classpath=/home/daiguozhou/sda6/code/chromium/src/third_party/android_tools/sdk//platforms/android-20/android.jar \"$(builddir)/lib.java/base_java.jar\"" "--src-gendirs=" "--javac-includes=" "--chromium-code=0" "--jar-path=$(obj)/gen/jni_sample_java/jni_sample_java.jar" "--jar-excluded-classes=\"*/R.class\" \"*/R##*.class\"" "--stamp=$(obj)/gen/jni_sample_java/compile.stamp" ../../../base/android/jni_generator/java/src/org/chromium/example/jni_generator/SampleForTests.java

$(obj)/gen/jni_sample_java/compile.stamp: obj := $(abs_obj)
$(obj)/gen/jni_sample_java/compile.stamp: builddir := $(abs_builddir)
$(obj)/gen/jni_sample_java/compile.stamp: TOOLSET := $(TOOLSET)
$(obj)/gen/jni_sample_java/compile.stamp: $(srcdir)/build/android/gyp/util/build_utils.py $(srcdir)/build/android/gyp/javac.py $(srcdir)/base/android/jni_generator/java/src/org/chromium/example/jni_generator/SampleForTests.java /home/daiguozhou/sda6/code/chromium/src/third_party/android_tools/sdk/platforms/android-20/android.jar $(builddir)/lib.java/base_java.jar FORCE_DO_CMD
	$(call do_cmd,base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_javac_jni_sample_java)
$(obj)/gen/jni_sample_java/jni_sample_java.jar: $(obj)/gen/jni_sample_java/compile.stamp
$(obj)/gen/jni_sample_java/jni_sample_java.jar: ;

all_deps += $(obj)/gen/jni_sample_java/compile.stamp $(obj)/gen/jni_sample_java/jni_sample_java.jar
action_base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_javac_jni_sample_java_outputs := $(obj)/gen/jni_sample_java/compile.stamp $(obj)/gen/jni_sample_java/jni_sample_java.jar

### Rules for action "instr_jar_jni_sample_java":
quiet_cmd_base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_instr_jar_jni_sample_java = ACTION Instrumenting jni_sample_java jar $@
cmd_base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_instr_jar_jni_sample_java = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/base/android/jni_generator; mkdir -p $(builddir)/lib.java; python ../../../build/android/gyp/emma_instr.py copy "--input-path=$(obj)/gen/jni_sample_java/jni_sample_java.jar" "--output-path=$(builddir)/lib.java/jni_sample_java.jar" "--stamp=$(obj)/gen/jni_sample_java/instr.stamp" "--coverage-file=jni_sample_java.em" "--sources-file=jni_sample_java_sources.txt"

$(builddir)/lib.java/jni_sample_java.jar: obj := $(abs_obj)
$(builddir)/lib.java/jni_sample_java.jar: builddir := $(abs_builddir)
$(builddir)/lib.java/jni_sample_java.jar: TOOLSET := $(TOOLSET)
$(builddir)/lib.java/jni_sample_java.jar: $(obj)/gen/jni_sample_java/jni_sample_java.jar $(srcdir)/build/android/gyp/emma_instr.py $(srcdir)/build/android/gyp/util/build_utils.py $(srcdir)/build/android/pylib/utils/command_option_parser.py FORCE_DO_CMD
	$(call do_cmd,base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_instr_jar_jni_sample_java)

all_deps += $(builddir)/lib.java/jni_sample_java.jar
action_base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_instr_jar_jni_sample_java_outputs := $(builddir)/lib.java/jni_sample_java.jar

### Rules for action "lint_jni_sample_java":
quiet_cmd_base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_lint_jni_sample_java = ACTION Linting jni_sample_java $@
cmd_base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_lint_jni_sample_java = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/base/android/jni_generator; mkdir -p $(obj)/gen/jni_sample_java; python ../../../build/android/gyp/lint.py "--lint-path=/home/daiguozhou/sda6/code/chromium/src/third_party/android_tools/sdk//tools/lint" "--config-path=../../../build/android/lint/suppressions.xml" "--processed-config-path=$(obj)/gen/jni_sample_java/lint_config.xml" "--manifest-path=../../../build/android/AndroidManifest.xml" "--result-path=$(obj)/gen/jni_sample_java/lint_result.xml" "--product-dir=$(builddir)" "--src-dirs=../../../base/android/jni_generator/java/src" "--jar-path=$(builddir)/lib.java/jni_sample_java.jar" "--stamp=$(obj)/gen/jni_sample_java/lint.stamp" ""

$(obj)/gen/jni_sample_java/lint.stamp: obj := $(abs_obj)
$(obj)/gen/jni_sample_java/lint.stamp: builddir := $(abs_builddir)
$(obj)/gen/jni_sample_java/lint.stamp: TOOLSET := $(TOOLSET)
$(obj)/gen/jni_sample_java/lint.stamp: $(builddir)/lib.java/jni_sample_java.jar $(obj)/gen/jni_sample_java/compile.stamp $(srcdir)/build/android/gyp/util/build_utils.py $(srcdir)/build/android/gyp/lint.py $(srcdir)/build/android/lint/suppressions.xml $(srcdir)/build/android/AndroidManifest.xml FORCE_DO_CMD
	$(call do_cmd,base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_lint_jni_sample_java)

all_deps += $(obj)/gen/jni_sample_java/lint.stamp
action_base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_lint_jni_sample_java_outputs := $(obj)/gen/jni_sample_java/lint.stamp

### Rules for action "jar_toc_jni_sample_java":
quiet_cmd_base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_jar_toc_jni_sample_java = ACTION Creating jni_sample_java jar.TOC $@
cmd_base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_jar_toc_jni_sample_java = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/base/android/jni_generator; mkdir -p $(builddir)/lib.java; python ../../../build/android/gyp/jar_toc.py "--jar-path=$(builddir)/lib.java/jni_sample_java.jar" "--toc-path=$(builddir)/lib.java/jni_sample_java.jar.TOC"

$(builddir)/lib.java/jni_sample_java.jar.TOC: obj := $(abs_obj)
$(builddir)/lib.java/jni_sample_java.jar.TOC: builddir := $(abs_builddir)
$(builddir)/lib.java/jni_sample_java.jar.TOC: TOOLSET := $(TOOLSET)
$(builddir)/lib.java/jni_sample_java.jar.TOC: $(srcdir)/build/android/gyp/util/build_utils.py $(srcdir)/build/android/gyp/util/md5_check.py $(srcdir)/build/android/gyp/jar_toc.py $(builddir)/lib.java/jni_sample_java.jar FORCE_DO_CMD
	$(call do_cmd,base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_jar_toc_jni_sample_java)

all_deps += $(builddir)/lib.java/jni_sample_java.jar.TOC
action_base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_jar_toc_jni_sample_java_outputs := $(builddir)/lib.java/jni_sample_java.jar.TOC

### Rules for action "dex_jni_sample_java":
quiet_cmd_base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_dex_jni_sample_java = ACTION Creating dex file: $(builddir)/lib.java/jni_sample_java.dex.jar $@
cmd_base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_dex_jni_sample_java = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/base/android/jni_generator; mkdir -p $(builddir)/lib.java; python ../../../build/android/gyp/dex.py "--dex-path=$(builddir)/lib.java/jni_sample_java.dex.jar" "--android-sdk-tools=/home/daiguozhou/sda6/code/chromium/src/third_party/android_tools/sdk//build-tools/20.0.0" "--configuration-name=$(BUILDTYPE)" "--proguard-enabled=false" "--proguard-enabled-input-path=" "--no-locals=0" "$(builddir)/lib.java/jni_sample_java.jar"

$(builddir)/lib.java/jni_sample_java.dex.jar: obj := $(abs_obj)
$(builddir)/lib.java/jni_sample_java.dex.jar: builddir := $(abs_builddir)
$(builddir)/lib.java/jni_sample_java.dex.jar: TOOLSET := $(TOOLSET)
$(builddir)/lib.java/jni_sample_java.dex.jar: $(srcdir)/build/android/gyp/util/build_utils.py $(srcdir)/build/android/gyp/util/md5_check.py $(srcdir)/build/android/gyp/dex.py $(builddir)/lib.java/jni_sample_java.jar FORCE_DO_CMD
	$(call do_cmd,base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_dex_jni_sample_java)
$(builddir)/lib.java/jni_sample_java.dex.jar.inputs: $(builddir)/lib.java/jni_sample_java.dex.jar
$(builddir)/lib.java/jni_sample_java.dex.jar.inputs: ;

all_deps += $(builddir)/lib.java/jni_sample_java.dex.jar $(builddir)/lib.java/jni_sample_java.dex.jar.inputs
action_base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_dex_jni_sample_java_outputs := $(builddir)/lib.java/jni_sample_java.dex.jar $(builddir)/lib.java/jni_sample_java.dex.jar.inputs


### Rules for final target.
# Build our special outputs first.
$(obj).target/base/android/jni_generator/jni_sample_java.stamp: | $(action_base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_javac_jni_sample_java_outputs) $(action_base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_instr_jar_jni_sample_java_outputs) $(action_base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_lint_jni_sample_java_outputs) $(action_base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_jar_toc_jni_sample_java_outputs) $(action_base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_dex_jni_sample_java_outputs)

# Preserve order dependency of special output on deps.
$(action_base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_javac_jni_sample_java_outputs) $(action_base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_instr_jar_jni_sample_java_outputs) $(action_base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_lint_jni_sample_java_outputs) $(action_base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_jar_toc_jni_sample_java_outputs) $(action_base_android_jni_generator_jni_generator_gyp_jni_sample_java_target_dex_jni_sample_java_outputs): | $(obj).target/base/base_java.stamp $(obj).target/build/android/build_output_dirs.stamp

$(obj).target/base/android/jni_generator/jni_sample_java.stamp: TOOLSET := $(TOOLSET)
$(obj).target/base/android/jni_generator/jni_sample_java.stamp: $(obj).target/base/base_java.stamp $(obj).target/build/android/build_output_dirs.stamp FORCE_DO_CMD
	$(call do_cmd,touch)

all_deps += $(obj).target/base/android/jni_generator/jni_sample_java.stamp
# Add target alias
.PHONY: jni_sample_java
jni_sample_java: $(obj).target/base/android/jni_generator/jni_sample_java.stamp

# Add target alias to "all" target.
.PHONY: all
all: jni_sample_java

